source("/home/miyokawa/ドキュメント/ngs/software/Subread_to_DEXSeq/load_SubreadOutput.R")
suppressPackageStartupMessages({
  require(dplyr)
})
rn <- c("Cai_Col-0_1.bam", "Cai_Col-0_2.bam", "Cai_Col-0_3.bam", "Cai_fio1_1.bam", "Cai_fio1_2.bam", "Cai_fio1_3.bam", "Parker_Col-0_04c_1.bam", "Parker_Col-0_04c_2.bam", "Parker_Col-0_04c_3.bam", "Parker_Col-0_04c_4.bam", "Parker_Col-0_04c_5.bam", "Parker_Col-0_04c_6.bam", "Parker_Col-0_12c_1.bam", "Parker_Col-0_12c_2.bam", "Parker_Col-0_12c_3.bam", "Parker_Col-0_12c_4.bam", "Parker_Col-0_12c_5.bam", "Parker_Col-0_12c_6.bam", "Parker_Col-0_20c_1.bam", "Parker_Col-0_20c_2.bam", "Parker_Col-0_20c_3.bam", "Parker_Col-0_20c_4.bam", "Parker_Col-0_20c_5.bam", "Parker_Col-0_20c_6.bam", "Parker_Col-0_28c_1.bam", "Parker_Col-0_28c_2.bam", "Parker_Col-0_28c_3.bam", "Parker_Col-0_28c_4.bam", "Parker_Col-0_28c_5.bam", "Parker_Col-0_28c_6.bam", "Parker_fio1_04c_1.bam", "Parker_fio1_04c_2.bam", "Parker_fio1_04c_3.bam", "Parker_fio1_04c_4.bam", "Parker_fio1_04c_5.bam", "Parker_fio1_04c_6.bam", "Parker_fio1_12c_1.bam", "Parker_fio1_12c_2.bam", "Parker_fio1_12c_3.bam", "Parker_fio1_12c_4.bam", "Parker_fio1_12c_5.bam", "Parker_fio1_12c_6.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_2.bam", "Parker_fio1_20c_3.bam", "Parker_fio1_20c_4.bam", "Parker_fio1_20c_5.bam", "Parker_fio1_20c_6.bam", "Parker_fio1_28c_1.bam", "Parker_fio1_28c_2.bam", "Parker_fio1_28c_3.bam", "Parker_fio1_28c_4.bam", "Parker_fio1_28c_5.bam", "Parker_fio1_28c_6.bam", "Sun_Col-0_1.bam", "Sun_Col-0_2.bam", "Sun_fio1-1_1.bam", "Sun_fio1-1_2.bam", "Sun_fio1-5_1.bam", "Sun_fio1-5_2.bam", "Wang_Col-0_1.bam", "Wang_Col-0_2.bam", "Wang_fio1_1.bam", "Wang_fio1_2.bam")
condition <- factor(c("Col-0", "Col-0", "Col-0", "fio1", "fio1", "fio1", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "Col-0", "Col-0", "fio1", "fio1", "fio1", "fio1", "Col-0", "Col-0", "fio1", "fio1"))
type <- factor(c("Cai", "Cai", "Cai", "Cai", "Cai", "Cai", "Parker4c", "Parker4c", "Parker4c", "Parker4c", "Parker4c", "Parker4c", "Parker12c", "Parker12c", "Parker12c", "Parker12c", "Parker12c", "Parker12c", "Parker20c", "Parker20c", "Parker20c", "Parker20c", "Parker20c", "Parker20c", "Parker28c", "Parker28c", "Parker28c", "Parker28c", "Parker28c", "Parker28c", "Parker4c", "Parker4c", "Parker4c", "Parker4c", "Parker4c", "Parker4c", "Parker12c", "Parker12c", "Parker12c", "Parker12c", "Parker12c", "Parker12c", "Parker20c", "Parker20c", "Parker20c", "Parker20c", "Parker20c", "Parker20c", "Parker28c", "Parker28c", "Parker28c", "Parker28c", "Parker28c", "Parker28c", "Sun", "Sun", "Sun", "Sun", "Sun", "Sun", "Wang", "Wang", "Wang", "Wang"))
browseVignettes(DEXSeq)
browseVignettes("DEXSeq")
samp <- data.frame(row.names=rn, condition, type)
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_fio1.txt",
                                         flattenedfile = "Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp, design= ~ sample + exon + condition:exon)
samp <- data.frame(row.names=rn, condition, type)
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_fio1.txt",
                                         flattenedfile = "../count/Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp, design= ~ sample + exon + condition:exon)
dxd <- estimateSizeFactors(dxd.fc)
formulaFullModel    =  ~ sample + exon + type:exon + condition:exon
formulaReducedModel =  ~ sample + exon + type:exon 
multicoreParam <- MulticoreParam(workers = 8)
dxd = estimateDispersions( dxd, formula = formulaFullModel, BPPARAM=multicoreParam)
dxd = testForDEU( dxd, reducedModel = formulaReducedModel, fullModel = formulaFullModel, BPPARAM=multicoreParam)
# Estimate relative exon usage fold changes
dxd <- estimateExonFoldChanges(dxd, fitExpToVar="condition", BPPARAM=multicoreParam)
dxr1 <- DEXSeqResults(dxd)
table <- as.data.frame(dxr1)
table$transcripts <- as.character(table$transcripts)
write.table(table, quote = F, sep = "\t", file = "DEXSeq_fio1.txt", row.names=F)
q()
source("/home/miyokawa/ドキュメント/ngs/software/Subread_to_DEXSeq/load_SubreadOutput.R")
suppressPackageStartupMessages({
  require(dplyr)
})
rn <- c("Cai_Col-0_1.bam", "Cai_Col-0_2.bam", "Cai_Col-0_3.bam", "Cai_fio1_1.bam", "Cai_fio1_2.bam", "Cai_fio1_3.bam", "Parker_Col-0_20c_1.bam", "Parker_Col-0_20c_2.bam", "Parker_Col-0_20c_3.bam", "Parker_Col-0_20c_4.bam", "Parker_Col-0_20c_5.bam", "Parker_Col-0_20c_6.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_2.bam", "Parker_fio1_20c_3.bam", "Parker_fio1_20c_4.bam", "Parker_fio1_20c_5.bam", "Parker_fio1_20c_6.bam", "Sun_Col-0_1.bam", "Sun_Col-0_2.bam", "Sun_fio1-1_1.bam", "Sun_fio1-1_2.bam", "Sun_fio1-5_1.bam", "Sun_fio1-5_2.bam", "Wang_Col-0_1.bam", "Wang_Col-0_2.bam", "Wang_fio1_1.bam", "Wang_fio1_2.bam")
condition <- factor(c("Col-0", "Col-0", "Col-0", "fio1", "fio1", "fio1", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "Col-0", "Col-0", "fio1", "fio1", "fio1", "fio1", "Col-0", "Col-0", "fio1", "fio1"))
type <- factor(c("Cai", "Cai", "Cai", "Cai", "Cai", "Cai", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Sun", "Sun", "Sun", "Sun", "Sun", "Sun", "Wang", "Wang", "Wang", "Wang"))
samp <- data.frame(row.names=rn, condition, type)
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_fio1_20c.txt",
                                         flattenedfile = "../count/Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp, design= ~ sample + exon + condition:exon)
rn <- c("Cai_Col-0_1.bam", "Cai_Col-0_2.bam", "Cai_Col-0_3.bam", "Cai_fio1_1.bam", "Cai_fio1_2.bam", "Cai_fio1_3.bam", "Parker_Col-0_20c_1.bam", "Parker_Col-0_20c_2.bam", "Parker_Col-0_20c_3.bam", "Parker_Col-0_20c_4.bam", "Parker_Col-0_20c_5.bam", "Parker_Col-0_20c_6.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_2.bam", "Parker_fio1_20c_3.bam", "Parker_fio1_20c_4.bam", "Parker_fio1_20c_5.bam", "Parker_fio1_20c_6.bam", "Sun_Col-0_1.bam", "Sun_Col-0_2.bam", "Sun_fio1-1_1.bam", "Sun_fio1-1_2.bam", "Sun_fio1-5_1.bam", "Sun_fio1-5_2.bam", "Wang_Col-0_1.bam", "Wang_Col-0_2.bam", "Wang_fio1_1.bam", "Wang_fio1_2.bam")
condition <- factor(c("Col-0", "Col-0", "Col-0", "fio1", "fio1", "fio1", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "Col-0", "Col-0", "fio1", "fio1", "fio1", "fio1", "Col-0", "Col-0", "fio1", "fio1"))
type <- factor(c("Cai", "Cai", "Cai", "Cai", "Cai", "Cai", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Sun", "Sun", "Sun", "Sun", "Sun", "Sun", "Wang", "Wang", "Wang", "Wang"))
samp <- data.frame(row.names=rn, condition, type)
rn <- c("Cai_Col-0_1.bam", "Cai_Col-0_2.bam", "Cai_Col-0_3.bam", "Cai_fio1_1.bam", "Cai_fio1_2.bam", "Cai_fio1_3.bam", "Parker_Col-0_20c_1.bam", "Parker_Col-0_20c_2.bam", "Parker_Col-0_20c_3.bam", "Parker_Col-0_20c_4.bam", "Parker_Col-0_20c_5.bam", "Parker_Col-0_20c_6.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_2.bam", "Parker_fio1_20c_3.bam", "Parker_fio1_20c_4.bam", "Parker_fio1_20c_5.bam", "Parker_fio1_20c_6.bam", "Sun_Col-0_1.bam", "Sun_Col-0_2.bam", "Sun_fio1-1_1.bam", "Sun_fio1-1_2.bam", "Sun_fio1-5_1.bam", "Sun_fio1-5_2.bam", "Wang_Col-0_1.bam", "Wang_Col-0_2.bam", "Wang_fio1_1.bam", "Wang_fio1_2.bam")
condition <- factor(c("Col-0", "Col-0", "Col-0", "fio1", "fio1", "fio1", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "Col-0", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1", "Col-0", "Col-0", "fio1", "fio1", "fio1", "fio1", "Col-0", "Col-0", "fio1", "fio1"))
type <- factor(c("Cai", "Cai", "Cai", "Cai", "Cai", "Cai", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker", "Parker","Parker", "Sun", "Sun", "Sun", "Sun", "Sun", "Sun", "Wang", "Wang", "Wang", "Wang"))
samp <- data.frame(row.names=rn, condition, type)
source("/home/miyokawa/ドキュメント/ngs/software/Subread_to_DEXSeq/load_SubreadOutput.R")
suppressPackageStartupMessages({
  require(dplyr)
})
samp <- data.frame(row.names = c("Parker_Col-0_20c_1.bam","Parker_Col-0_20c_1.bam","Parker_Col-0_20c_1.bam", "Parker_Col-0_20c_1.bam", "Parker_Col-0_20c_1.bam", "Parker_Col-0_20c_1.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_1.bam"), 
                   condition = c("Col_0", "Col_0", "Col_0", "Col_0" "Col_0" "Col_0" "fio1", "fio1", "fio1", "fio1", "fio1", "fio1"))
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_Parker20c.txt",
                                         flattenedfile = "Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp)
samp <- data.frame(row.names = c("Parker_Col-0_20c_1.bam","Parker_Col-0_20c_2.bam","Parker_Col-0_20c_3.bam", "Parker_Col-0_20c_4.bam", "Parker_Col-0_20c_5.bam", "Parker_Col-0_20c_6.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_2.bam", "Parker_fio1_20c_3.bam", "Parker_fio1_20c_4.bam", "Parker_fio1_20c_5.bam", "Parker_fio1_20c_6.bam"), 
                   condition = c("Col_0", "Col_0", "Col_0", "Col_0" "Col_0" "Col_0" "fio1", "fio1", "fio1", "fio1", "fio1", "fio1"))
rn <- c("Parker_Col-0_20c_1.bam","Parker_Col-0_20c_2.bam","Parker_Col-0_20c_3.bam", "Parker_Col-0_20c_4.bam", "Parker_Col-0_20c_5.bam", "Parker_Col-0_20c_6.bam", "Parker_fio1_20c_1.bam", "Parker_fio1_20c_2.bam", "Parker_fio1_20c_3.bam", "Parker_fio1_20c_4.bam", "Parker_fio1_20c_5.bam", "Parker_fio1_20c_6.bam")
samp <- data.frame(row.names = rn, 
                   condition = c("Col_0", "Col_0", "Col_0", "Col_0" "Col_0" "Col_0" "fio1", "fio1", "fio1", "fio1", "fio1", "fio1"))
samp <- data.frame(row.names = rn, 
                   condition = c("Col_0", "Col_0", "Col_0", "Col_0", "Col_0", "Col_0", "fio1", "fio1", "fio1", "fio1", "fio1", "fio1"))
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_Parker20c.txt",
                                         flattenedfile = "Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp)
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_Parker20c.txt",
                                         flattenedfile = "/media/miyokawa/8TB-Data3/tech_data/count/Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp)
dxd <- estimateDispersions(dxd)
dxd <- estimateSizeFactors(dxd.fc)
dxd <- estimateDispersions(dxd)
dxd <- testForDEU(dxd)
# Estimate relative exon usage fold changes
dxd <- estimateExonFoldChanges(dxd, fitExpToVar="condition")
# Output DEXSeq result
dxr1 <- DEXSeqResults(dxd)
table <- as.data.frame(dxr1)
table$transcript <- as.character(table$transcript)
write.table(table, quote = F, sep = "\t", file = "DEXSeq_Parker20c_result.txt", index=F)
write.table(table, quote = F, sep = "\t", file = "DEXSeq_Parker20c_result.txt", index=F)
write.table(table, quote = F, sep = "\t", file = "DEXSeq_Parker20c_result.txt", row.names = F)
table
head(table)
table <- as.data.frame(dxr1)
table$transcripts <- as.character(table$transcripts)
write.table(table, quote = F, sep = "\t", file = "DEXSeq_Parker20c_result.txt", row.names = F)
q()
source("/home/miyokawa/ドキュメント/ngs/software/Subread_to_DEXSeq/load_SubreadOutput.R")
suppressPackageStartupMessages({
  require(dplyr)
})
rn <- c("Sun_Col-0_1.bam","Sun_Col-0_2.bam", "Sun_fio1-1_1.bam", "Parker_fio1-1_2.bam", "Parker_fio1-5_1.bam", "Parker_fio1-5_2.bam")
samp <- data.frame(row.names = rn, 
                   condition = c("Col_0", "Col_0", "fio1", "fio1", "fio1", "fio1"))
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_Sun.txt",
                                         flattenedfile = "/media/miyokawa/8TB-Data3/tech_data/count/Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp)
# Adjust for coverage biases among samples
dxd <- estimateSizeFactors(dxd.fc)
# Estimate variance or dispersion parameters individually exon by exon
dxd <- estimateDispersions(dxd)
dxd <- testForDEU(dxd)
# Estimate relative exon usage fold changes
dxd <- estimateExonFoldChanges(dxd, fitExpToVar="condition")
# Output DEXSeq result
dxr1 <- DEXSeqResults(dxd)
table <- as.data.frame(dxr1)
table$transcripts <- as.character(table$transcripts)
write.table(table, quote = F, sep = "\t", file = "DEXSeq_Sun2_result.txt", row.names = F)
head(dxd)
dxd$condition
rn <- c("Sun_Col-0_1.bam","Sun_Col-0_2.bam", "Sun_fio1-1_1.bam", "Parker_fio1-1_2.bam", "Parker_fio1-5_1.bam", "Parker_fio1-5_2.bam")
samp <- data.frame(row.names = rn, 
                   condition = c("Col_0", "Col_0", "fio1", "fio1", "fio1", "fio1"))
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_Sun.txt",
                                         flattenedfile = "/media/miyokawa/8TB-Data3/tech_data/count/Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp)
dxd <- estimateSizeFactors(dxd.fc)
dxd
dxd$condition
dxd$sample
q()
source("/home/miyokawa/ドキュメント/ngs/software/Subread_to_DEXSeq/load_SubreadOutput.R")
suppressPackageStartupMessages({
  require(dplyr)
})
rn <- c("Sun_Col-0_1.bam","Sun_Col-0_2.bam", "Sun_fio1-1_1.bam", "Parker_fio1-1_2.bam", "Parker_fio1-5_1.bam", "Parker_fio1-5_2.bam")
samp <- data.frame(row.names = rn, 
                   condition = c("Col_0", "Col_0", "fio1", "fio1", "fio1", "fio1"))
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_Sun.txt",
                                         flattenedfile = "/media/miyokawa/8TB-Data3/tech_data/count/Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp)
dxd.fc
dxd.fc$sample
rn <- c("Sun_Col-0_1.bam","Sun_Col-0_2.bam", "Sun_fio1-1_1.bam", "Sun_fio1-1_2.bam", "Sun_fio1-5_1.bam", "Sun_fio1-5_2.bam")
samp <- data.frame(row.names = rn, 
                   condition = c("Col_0", "Col_0", "fio1", "fio1", "fio1", "fio1"))
dxd.fc <- DEXSeqDataSetFromFeatureCounts("/media/miyokawa/8TB-Data3/tech_data/count/dex_counts_Sun.txt",
                                         flattenedfile = "/media/miyokawa/8TB-Data3/tech_data/count/Araport11_GTF_genes_transposons.Apr2023_flat.gtf",
                                         sampleData = samp)
dxd.fc$sample
samp
# Adjust for coverage biases among samples
dxd <- estimateSizeFactors(dxd.fc)

# Estimate variance or dispersion parameters individually exon by exon
dxd <- estimateDispersions(dxd)

png(filename = "test.png", width = 600, height = 600)
plotDispEsts(dxd)
dev.off()

# Test for differential exon usage in each gene
dxd <- testForDEU(dxd)

# Estimate relative exon usage fold changes
dxd <- estimateExonFoldChanges(dxd, fitExpToVar="condition")

# Output DEXSeq result
dxr1 <- DEXSeqResults(dxd)
table <- as.data.frame(dxr1)
table$transcripts <- as.character(table$transcripts)
if (!require("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install("sva")
browseVignettes("edgeR")
library(edgeR)
> edgeRUsersGuide()
library(edgeR)edgeRUsersGuide()
library(edgeR)
 edgeRUsersGuide()
q()
